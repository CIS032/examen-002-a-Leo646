
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author leonardo
 */
public class principalPanel extends javax.swing.JFrame {

    /**
     * Creates new form principalPanel
     */
    public principalPanel() {
        initComponents();
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jlbTipo = new javax.swing.JLabel();
        jlbNombre = new javax.swing.JLabel();
        jlbApellidos = new javax.swing.JLabel();
        jlbCedula = new javax.swing.JLabel();
        jlbCarrera = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        txtCedula = new javax.swing.JTextField();
        txtcarrera = new javax.swing.JTextField();
        jbtAñadir = new javax.swing.JButton();
        btnCompleto = new javax.swing.JButton();
        jbtMedio = new javax.swing.JButton();
        jbtParcial = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMostrar = new javax.swing.JTextArea();
        jbtCargar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlbTipo.setText("Tipo de profesor");

        jlbNombre.setText("Nombre");

        jlbApellidos.setText("Apellidos");

        jlbCedula.setText("Cedula");

        jlbCarrera.setText("Carrera");

        txtCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCedulaActionPerformed(evt);
            }
        });

        jbtAñadir.setText("Añadir");
        jbtAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAñadirActionPerformed(evt);
            }
        });

        btnCompleto.setText("Tiempo Completo");
        btnCompleto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompletoActionPerformed(evt);
            }
        });

        jbtMedio.setText("Medio Tiempo");
        jbtMedio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtMedioActionPerformed(evt);
            }
        });

        jbtParcial.setText("Tiempo Parcial");
        jbtParcial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtParcialActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlbNombre)
                            .addComponent(jlbApellidos)
                            .addComponent(jlbCedula)
                            .addComponent(jlbCarrera))
                        .addGap(102, 102, 102)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                            .addComponent(txtApellidos)
                            .addComponent(txtCedula)
                            .addComponent(txtcarrera))
                        .addGap(65, 65, 65)
                        .addComponent(jbtAñadir))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jlbTipo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCompleto)
                        .addGap(27, 27, 27)
                        .addComponent(jbtMedio)
                        .addGap(27, 27, 27)
                        .addComponent(jbtParcial)))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbNombre)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbApellidos)
                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbCedula)
                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtAñadir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbCarrera)
                    .addComponent(txtcarrera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCompleto)
                    .addComponent(jbtMedio)
                    .addComponent(jbtParcial)
                    .addComponent(jlbTipo))
                .addContainerGap())
        );

        txtMostrar.setColumns(20);
        txtMostrar.setRows(5);
        jScrollPane1.setViewportView(txtMostrar);

        jbtCargar.setText("Cargar");
        jbtCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtCargarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtCargar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jbtCargar)
                        .addGap(96, 96, 96))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCedulaActionPerformed
             /* ListaProfesores lista = new ListaProfesores();*/
    private void jbtAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAñadirActionPerformed
      /* String tipos[] = {"Tiempo Completo", "Medio Tiempo", "Tiempo Parcial"};
                    int tipo = JOptionPane.showOptionDialog(null, "Seleccione el tipo de docente", "TIPO DOCENTE", 0, JOptionPane.QUESTION_MESSAGE, new ImageIcon(), tipos, tipos[0]);
                    String nombres = txtNombre.getText();
                    String apellidos = txtApellidos.getText();
                    String cedula = txtCedula.getText();
                    String carrera =txtcarrera.getText() +""+ nombres + " " +apellidos;
                    
                    if (tipo == 0) {
                        int horasClase = Integer.parseInt(JOptionPane.showInputDialog("Ingrese las horas que imparte el/la docente " + nombres + " " + apellidos + "\n estas deben ser de 3 a 16 horas "));
                        if (horasClase > 2 & horasClase < 17) {
                            lista.agregar(new ProfesorTiempoCompleto(cedula, nombres, apellidos, horasClase, carrera));
                        } else {
                            JOptionPane.showMessageDialog(null, "El docente de tiempo completo debe impartir desde 3 horas hasta 16 horas clase", "ERROR", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                    
                    if (tipo == 1) {
                        int horasClase = Integer.parseInt(JOptionPane.showInputDialog("Ingrese las horas que imparte el/la docente " + nombres + " " + apellidos + "\n estas deben ser 10 horas "));
                        if (horasClase == 10) {
                            lista.agregar(new ProfesorMedioTiempo(cedula, nombres, apellidos, horasClase, carrera));
                        } else {
                            JOptionPane.showMessageDialog(null, "El docente de medio tiempo debe impartir 10 horas clase", "ERROR", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                    if (tipo == 2) {
                        int horasSemanales = Integer.parseInt(JOptionPane.showInputDialog("Ingrese las horas semanales de trabajo del docente " + nombres + " " + apellidos + "\n estas deben ser menos de 20 horas Semanales"));
                        int horasClase = Integer.parseInt(JOptionPane.showInputDialog("Ingrese las horas que imparte el/la docente " + nombres + " " + apellidos + "\n estas deben ser de 2 a 9 horas "));
                        if ((horasClase > 1 & horasClase < 10) & horasSemanales < 20) {
                            lista.agregar(new ProfesorTiempoParcial(cedula, nombres, apellidos, horasClase, carrera, horasSemanales));
                        } else {
                            JOptionPane.showMessageDialog(null, "El docente de tiempo parcial trabaja menos de 20 horas a la semana y debe impartir de 2 a 9 horas clase.", "ERROR", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                    lista.grabar();
                    PrintWriter pw = null;*/
        
    }//GEN-LAST:event_jbtAñadirActionPerformed

    private void jbtCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtCargarActionPerformed
        String lista=ListaProfesores.leer();
        this.txtMostrar.append(lista);
    }//GEN-LAST:event_jbtCargarActionPerformed
ListaProfesores lista = new ListaProfesores();
    private void btnCompletoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompletoActionPerformed
        
       
                    String nombres = txtNombre.getText();
                    String apellidos = txtApellidos.getText();
                    String cedula = txtCedula.getText();
                    String carrera =txtcarrera.getText() +""+ nombres + " " +apellidos;
        
        
                        int horasClase = Integer.parseInt(JOptionPane.showInputDialog("Ingrese las horas que imparte el/la docente " + nombres + " " + apellidos + "\n estas deben ser de 3 a 16 horas "));
                        if (horasClase > 2 & horasClase < 17) {
                            lista.agregar(new ProfesorTiempoCompleto(cedula, nombres, apellidos, horasClase, carrera));
                        } else {
                            JOptionPane.showMessageDialog(null, "El docente de tiempo completo debe impartir desde 3 horas hasta 16 horas clase", "ERROR", JOptionPane.ERROR_MESSAGE);
                        }
                    lista.grabar();
    }//GEN-LAST:event_btnCompletoActionPerformed

    private void jbtMedioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtMedioActionPerformed
        String nombres = txtNombre.getText();
                    String apellidos = txtApellidos.getText();
                    String cedula = txtCedula.getText();
                    String carrera =txtcarrera.getText() +""+ nombres + " " +apellidos;
          int horasClase = Integer.parseInt(JOptionPane.showInputDialog("Ingrese las horas que imparte el/la docente " + nombres + " " + apellidos + "\n estas deben ser 10 horas "));
                        if (horasClase == 10) {
                            lista.agregar(new ProfesorMedioTiempo(cedula, nombres, apellidos, horasClase, carrera));
                        } else {
                            JOptionPane.showMessageDialog(null, "El docente de medio tiempo debe impartir 10 horas clase", "ERROR", JOptionPane.ERROR_MESSAGE);
                        }
                        lista.grabar();
    }//GEN-LAST:event_jbtMedioActionPerformed

    private void jbtParcialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtParcialActionPerformed
         String nombres = txtNombre.getText();
                    String apellidos = txtApellidos.getText();
                    String cedula = txtCedula.getText();
                    String carrera =txtcarrera.getText() +""+ nombres + " " +apellidos; 
                    int horasSemanales = Integer.parseInt(JOptionPane.showInputDialog("Ingrese las horas semanales de trabajo del docente " + nombres + " " + apellidos + "\n estas deben ser menos de 20 horas Semanales"));
                    int horasClase = Integer.parseInt(JOptionPane.showInputDialog("Ingrese las horas que imparte el/la docente " + nombres + " " + apellidos + "\n estas deben ser de 2 a 9 horas "));
                        if ((horasClase > 1 & horasClase < 10) & horasSemanales < 20) {
                            lista.agregar(new ProfesorTiempoParcial(cedula, nombres, apellidos, horasClase, carrera, horasSemanales));
                        } else {
                            JOptionPane.showMessageDialog(null, "El docente de tiempo parcial trabaja menos de 20 horas a la semana y debe impartir de 2 a 9 horas clase.", "ERROR", JOptionPane.ERROR_MESSAGE);
                        }
    }//GEN-LAST:event_jbtParcialActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principalPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principalPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principalPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principalPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new principalPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCompleto;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtAñadir;
    private javax.swing.JButton jbtCargar;
    private javax.swing.JButton jbtMedio;
    private javax.swing.JButton jbtParcial;
    private javax.swing.JLabel jlbApellidos;
    private javax.swing.JLabel jlbCarrera;
    private javax.swing.JLabel jlbCedula;
    private javax.swing.JLabel jlbNombre;
    private javax.swing.JLabel jlbTipo;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextArea txtMostrar;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtcarrera;
    // End of variables declaration//GEN-END:variables
}
